<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.lms.professor.schoalarship.dao.IProfessorSchoalarshipDAO">

<sql id="searchFrag">
			<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(searchVO.searchWord)">
				<choose>
					<when test="'name'.equals(searchVO.searchType)">
					AND	INSTR(MEM_NAME, #{searchVO.searchWord}) > 0
					</when>
					<when test="'stuCode'.equals(searchVO.searchType)">
					AND	INSTR(MEM_ID, #{searchVO.searchWord}) > 0
					</when>
					<otherwise>
					AND	INSTR(MEM_NAME, #{searchVO.searchWord}) > 0
					OR	INSTR(MEM_ID, #{searchVO.searchWord}) > 0
					</otherwise>
				</choose>
			</if>
</sql>


<select id="selectStudentByDep" parameterType="kr.or.ddit.lms.professor.schoalarship.vo.StudentFormVO" resultType="kr.or.ddit.member.vo.MemberVO">
SELECT 
MEM_ID,
MEM_NAME,
MEM_GRD
FROM MEMBER
WHERE SUBSTR(MEM_ID,3,3)=SUBSTR(#{proId},1,3)
AND MEM_TYPE= #{memType}
<include refid="searchFrag" />
ORDER BY MEM_ID
</select>


<select id="selectRecommendScholarList" resultType="kr.or.ddit.vo.ScholarshipVO">
SELECT 
SCH_CODE,
SCH_NAME,
SCH_AMOUNT
FROM SCHOLARSHIP
WHERE SCH_TYPE='RECOM'
</select>

<insert id="insertRecommendScholarship" parameterType="kr.or.ddit.vo.ScholarshipFundVO">
<selectKey order="BEFORE" keyProperty="sfundNo" resultType="int">
		SELECT NVL(MAX(SFUND_NO), 0)+1 AS SFUND_NO
		FROM SCHAR_FUND
</selectKey>
INSERT INTO 
SCHAR_FUND(
SFUND_NO,
SCHAR_CODE,
CODE_RESULT,
SFUND_VALUE,
SFUND_SMST,
SFUND_RESDATE,
SFUND_STUDENT,
SFUND_PROFESSOR,
SFUND_REASON
)VALUES
(
	#{sfundNo,jdbcType=NUMERIC},
	#{scharCode,jdbcType=VARCHAR},
	#{codeResult,jdbcType=VARCHAR},
	#{sfundValue,jdbcType=NUMERIC},
	#{sfundSmst,jdbcType=VARCHAR},
	SYSDATE,
	#{sfundStudent,jdbcType=VARCHAR},
	#{sfundProfessor,jdbcType=VARCHAR},
	#{sfundReason,jdbcType=VARCHAR}
)
</insert>

<select id="selectRecommScholarshipSmstList" parameterType="kr.or.ddit.member.vo.MemberVO" resultType="kr.or.ddit.vo.ScholarshipFundVO">
SELECT 
DISTINCT(SFUND_SMST) AS SFUND_SMST
FROM SCHAR_FUND
WHERE SFUND_PROFESSOR=#{memId}
ORDER BY SFUND_SMST DESC
</select>

<select id="selectRecommendStudentCount" parameterType="kr.or.ddit.vo.PagingVO" resultType="int">
SELECT COUNT(*)
FROM SCHAR_FUND A, SCHOLARSHIP B 
WHERE A.SCHAR_CODE=B.SCH_CODE
AND SFUND_PROFESSOR=#{searchDetail.sfundProfessor}
</select>


<resultMap type="kr.or.ddit.vo.ScholarshipFundVO" id="schMap" autoMapping="true">
<collection property="schVO" ofType="kr.or.ddit.vo.ScholarshipVO" javaType="kr.or.ddit.vo.ScholarshipVO">
		<result property="schName" column="SCH_NAME"/>
</collection>
<collection property="codeVO" ofType="kr.or.ddit.vo.CodeVO" javaType="kr.or.ddit.vo.CodeVO">
		<result property="code" column="CODE"/>
		<result property="codeName" column="CODE_NAME"/>
</collection>
<collection property="memberVO" ofType="kr.or.ddit.member.vo.MemberVO" javaType="kr.or.ddit.member.vo.MemberVO">
		<result property="memId" column="MEM_ID"/>
		<result property="memName" column="MEM_NAME"/>
</collection>
</resultMap>
<select id="selectRecommendStudentList" parameterType="kr.or.ddit.vo.PagingVO" resultMap="schMap">
SELECT E.*
		FROM (
			SELECT D.* , ROWNUM RNUM
			FROM(
            SELECT
            SFUND_NO,
            SCHAR_CODE,
            CODE_RESULT,
            CODE_NAME,
            SFUND_VALUE,
            SFUND_SMST,
            TO_CHAR(SFUND_RESDATE,'YYYY-MM-DD')AS SFUND_RESDATE ,
            TO_CHAR(SFUND_GETDATE,'YYYY-MM-DD')AS SFUND_GETDATE,
            SFUND_STUDENT,
            MEM_NAME,
            SFUND_PROFESSOR,
            SFUND_REASON,
            SCH_NAME
            FROM SCHOLARSHIP B, MEMBER D ,SCHAR_FUND A 
			LEFT OUTER JOIN CODE C ON(A.CODE_RESULT =C.CODE )
			WHERE A.SCHAR_CODE = B.SCH_CODE
			AND A.SFUND_STUDENT = D.MEM_ID
			AND SFUND_PROFESSOR=#{searchDetail.sfundProfessor, jdbcType=VARCHAR}
    		<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(searchVO.searchWord)">
				AND SFUND_SMST = #{searchVO.searchWord}
			</if>
            	) D
		) E
 	    <![CDATA[ 
 	    WHERE RNUM >= #{startRow} AND RNUM <= #{endRow}
    	 ]]>
    	 ORDER BY SFUND_RESDATE DESC  
</select>

<select id="checkRecommendRecord" parameterType="kr.or.ddit.vo.ScholarshipFundVO" resultType="kr.or.ddit.vo.ScholarshipFundVO">
SELECT
SFUND_NO,
SCHAR_CODE,
CODE_RESULT,
SFUND_VALUE,
SFUND_SMST,
TO_CHAR(SFUND_RESDATE,'YYYY-MM-DD')AS SFUND_RESDATE ,
TO_CHAR(SFUND_GETDATE,'YYYY-MM-DD')AS SFUND_GETDATE,
SFUND_STUDENT,
SFUND_PROFESSOR,
SFUND_REASON
FROM SCHAR_FUND 
WHERE  SFUND_PROFESSOR=#{sfundProfessor,jdbcType=VARCHAR}
AND SFUND_SMST = #{sfundSmst,jdbcType=VARCHAR}
AND SFUND_STUDENT=#{sfundStudent,jdbcType=VARCHAR}
</select>

<delete id="deleteRecommendScholarship" parameterType="kr.or.ddit.vo.ScholarshipFundVO">
DELETE FROM SCHAR_FUND
WHERE SFUND_NO = #{sfundNo}
</delete>

<select id="selectRecommendDetail" parameterType="kr.or.ddit.vo.ScholarshipFundVO" resultMap="schMap">
SELECT
SFUND_NO,
SCHAR_CODE,
CODE_RESULT,
CODE_NAME,
SFUND_VALUE,
SFUND_SMST,
TO_CHAR(SFUND_RESDATE,'YYYY-MM-DD')AS SFUND_RESDATE ,
TO_CHAR(SFUND_GETDATE,'YYYY-MM-DD')AS SFUND_GETDATE,
SFUND_STUDENT,
MEM_NAME,
SFUND_PROFESSOR,
SFUND_REASON,
SCH_NAME
FROM SCHOLARSHIP B,MEMBER D, SCHAR_FUND A 
LEFT OUTER JOIN  CODE C ON (A.CODE_RESULT =C.CODE)
WHERE A.SCHAR_CODE = B.SCH_CODE
AND A.SFUND_STUDENT = D.MEM_ID
AND SFUND_NO=#{sfundNo}
</select>

</mapper>